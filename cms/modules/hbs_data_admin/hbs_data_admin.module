<?php

/**
 * Implements hook_menu
 *
 * Provides a callback to show the api/region/admin page
 */
function hbs_data_admin_menu() {
  return array(
    'admin/config/hbsdata' => array(
      'title' => 'HBS Data Management',
      'description' => 'Manage data related to HBS Clustermapping',
      'page callback' => 'system_admin_menu_block_page',
      'access arguments' => array('manage hbs data'),
      'position' => 'right',
      'file' => 'system.admin.inc',
      'file path' => drupal_get_path('module', 'system'),
    ),
    'admin/config/hbsdata/region' => array(
      'title' => 'Regional Data Administration',
      'description' => 'Create and manage regions',
      'page callback' => 'hbs_data_admin_page',
      'page arguments' => array('region'),
      'access arguments' => array('manage hbs data')
    ),
    'admin/config/hbsdata/clusterData' => array(
      'title' => 'Cluster to Region Data Administration',
      'description' => 'Create and manage regions',
      'page callback' => 'hbs_data_admin_page',
      'page arguments' => array('cluster'),
      'access arguments' => array('manage hbs data')
    ),
    'admin/config/hbsdata/cluster' => array(
      'title' => 'Cluster to NAICS Data Administration',
      'description' => 'Create and manage regions',
      'page callback' => 'hbs_data_admin_page',
      'page arguments' => array('cluster/meta'),
      'access arguments' => array('manage hbs data')
    ),
    'admin/config/hbsdata/customregions' => array(
      'title' => 'Custom Regions',
      'description' => 'Custom Regions List',
      'page callback' => 'hbs_data_custom_regions',
      'access arguments' => array('manage hbs data')
    ),
  );
}

/**
 * Implements hook_permissions
 *
 * Provides a permission to manage the hbs data
 */
function hbs_data_admin_permission() {
  return array(
    'manage hbs data' => array(
      'title' => t('Manage HBS Data'),
      'description' => t('Upload and manage HBS data.'),
    ),
  );
}

function hbs_data_landing() {
  return 'tbd';
}

/**
 * Page callback to provide a view of the api/region/admin page
 * Allows users to upload shape data for the region
 */
function hbs_data_admin_page($type) {
  global $base_path;
  $markup = array(
    'data_view' => array(
      '#type' => 'markup',
      '#markup' => '<iframe src="' . $base_path . 'api/' . $type . '" frameborder=0 height="700px" width="100%"></iframe>',
    ),
  );

  return drupal_render($markup);
}

/**
 * Helper function to provide a Custom Regions List
 */
function _hbs_load_custom_regions() {
    global $base_url, $user;
    $alias = str_replace('users/', '', $alias);
    $api_base_url = variable_get('hbs_dashboard_api_base_url', $base_url);
    $result = drupal_http_request($api_base_url . '/data/custom/admin/list');
    $data = json_decode($result->data, TRUE);
    return $data;
}

/**
 * Page callback to provide a Custom Regions List
 */
function hbs_data_custom_regions($type) {
  global $base_url, $base_path, $user;
  $api_base_url = variable_get('hbs_dashboard_api_base_url', $base_url);
  $data = _hbs_load_custom_regions();
  $content = '';
  if (is_array($data)) {
    $content .= '<h3>' . t('Custom Regions') . '</h3>';
    $content .= '<p>Below you can a list of the saved custom regions. Regions marked as "Data Processing..." will be available shortly (usually within 30m), reload this page to see updated status.</p><ul>';
    foreach($data AS $region) {
        if (isset($region['key_t'])) {
            $url = $base_url . '/region/custom/' . $region['key_t'];
            $content .= '<li>'
              . l($region['region_short_name_t'] . ' (' . $region['region_count_tl'] . ' counties)', $url)
            . ' </li>';
        } else {
            $content .= '<li>' . $region['region_short_name_t'] . ' (' . $region['region_count_tl'] . ' counties)'
              . ' - <a class="restart-processing" data-code="' . $region['region_code_t'] . '" href=""> Restart Processing </a>'
              . '</li>';
        }
    }
    $content .= '</ul>';
    $content .= '<script>';
    $content .= 'jQuery(".restart-processing").on("click", function(e){
      e.preventDefault();
      var $ = jQuery;
      var $this = $(this);
      var code = $(this).data("code");
      $.post("' . $api_base_url . '/data/custom/restart", {code: code})
      .then(function(result) {
        $this.after("<span>Data Processing restarted</span>").remove();
      });
    })';
    $content .= '</script>';
  }
  $markup = array(
    'data_view' => array(
      '#type' => 'markup',
      '#markup' => $content,
    ),
  );

  return drupal_render($markup);
}
